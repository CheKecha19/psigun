# exchanges/bybit/bybit_exchange.py
import requests
import urllib3
from typing import Dict, List, Optional
from ..base_exchange import BaseExchange  # –ò—Å–ø—Ä–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç
from .bybit_loans import BybitLoans
from .bybit_flexible_savings import BybitFlexibleSavings
from .bybit_onchain_savings import BybitOnchainSavings

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

class BybitExchange(BaseExchange):
    """–û–±—ä–µ–¥–∏–Ω–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è API –¥–ª—è Bybit (–≤—Å–µ –ø—Ä–æ–¥—É–∫—Ç—ã)"""
    
    def __init__(self, config: Dict):
        super().__init__("Bybit", config)
        self.base_url = "https://api.bybit.com"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª–µ–π
        self.loans_module = BybitLoans(self.base_url, config)
        self.flexible_savings_module = BybitFlexibleSavings(self.base_url, config)
        self.onchain_savings_module = BybitOnchainSavings(self.base_url, config)
    
    def get_loan_rates(self) -> Dict[str, Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–≤–∫–∏ –ø–æ –∑–∞–π–º–∞–º —Å Bybit"""
        return self.loans_module.get_loan_rates()
    
    def get_staking_rates(self) -> Dict[str, Dict]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞–≤–∫–∏ –ø–æ –≤—Å–µ–º —Ç–∏–ø–∞–º —Å—Ç–µ–π–∫–∏–Ω–≥–∞ —Å Bybit"""
        print("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ –≤—Å–µ—Ö —Ç–∏–ø–∞—Ö —Å—Ç–µ–π–∫–∏–Ω–≥–∞ —Å Bybit...")
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        flexible_rates = self.flexible_savings_module.get_rates()
        onchain_rates = self.onchain_savings_module.get_rates()
        
        # –û–±—ä–µ–¥–∏–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã, –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞—è –±–æ–ª–µ–µ –≤—ã—Å–æ–∫–∏–µ —Å—Ç–∞–≤–∫–∏
        combined_rates = {}
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—Å–µ –≥–∏–±–∫–∏–µ —Å—Ç–∞–≤–∫–∏
        for coin, data in flexible_rates.items():
            combined_rates[coin] = data
        
        # –î–ª—è –æ–Ω—á–µ–π–Ω —Å—Ç–∞–≤–æ–∫: –µ—Å–ª–∏ –º–æ–Ω–µ—Ç–∞ —É–∂–µ –µ—Å—Ç—å, –±–µ—Ä–µ–º –º–∞–∫—Å–∏–º–∞–ª—å–Ω—É—é —Å—Ç–∞–≤–∫—É
        for coin, data in onchain_rates.items():
            if coin in combined_rates:
                if data['apy'] > combined_rates[coin]['apy']:
                    combined_rates[coin] = data
            else:
                combined_rates[coin] = data
        
        print(f"üìä Bybit: –æ–±—ä–µ–¥–∏–Ω–µ–Ω–æ {len(flexible_rates)} –≥–∏–±–∫–∏—Ö + {len(onchain_rates)} –æ–Ω—á–µ–π–Ω = {len(combined_rates)} —Å—Ç–∞–≤–æ–∫")
        return combined_rates
    
    def get_available_coins(self) -> List[str]:
        """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–Ω–µ—Ç –Ω–∞ Bybit"""
        loan_rates = self.get_loan_rates()
        staking_rates = self.get_staking_rates()
        return list(set(loan_rates.keys()) | set(staking_rates.keys()))