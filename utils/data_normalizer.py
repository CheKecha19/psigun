# utils/data_normalizer.py
class DataNormalizer:
    """–ö–ª–∞—Å—Å –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –∏ –º–µ—Ç–æ–∫ –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏"""
    
    @staticmethod
    def get_profitability_label(net_profit: float) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å –º–µ—Ç–∫—É –ø—Ä–∏–±—ã–ª—å–Ω–æ—Å—Ç–∏ —Å –Ω–æ–≤—ã–º–∏ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞–º–∏"""
        if net_profit > 100:
            return "üöÄ –°–£–ü–ï–† –ü–†–ò–ë–´–õ–¨"
        elif net_profit > 50:
            return "üëë –û–ß–ï–ù–¨ –í–´–°–û–ö–ê–Ø"
        elif net_profit > 20:
            return "üëë –û–¢–õ–ò–ß–ù–ê–Ø"
        elif net_profit > 15:
            return "üü¢ –•–û–†–û–®–ê–Ø"
        elif net_profit > 10:
            return "üü° –ù–ò–ó–ö–ê–Ø"
        elif net_profit > 2:
            return "üîµ –ë–ï–ó–£–ë–´–¢–û–ö"
        else:
            return "üî¥ –£–ë–´–¢–û–ß–ù–ê–Ø"
    
    @staticmethod
    def normalize_percentage(value) -> float:
        """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
        try:
            if isinstance(value, str):
                # –£–¥–∞–ª—è–µ–º —Å–∏–º–≤–æ–ª—ã % –∏ –ø—Ä–æ–±–µ–ª—ã
                value = value.replace('%', '').strip()
            return float(value)
        except (ValueError, TypeError):
            return 0.0
    
    @staticmethod
    def normalize_amount(value) -> float:
        """–ù–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞—Ç—å –¥–µ–Ω–µ–∂–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ"""
        try:
            if isinstance(value, str):
                # –£–¥–∞–ª—è–µ–º –ø—Ä–æ–±–µ–ª—ã –∏ –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ —Å–∏–º–≤–æ–ª—ã (–∫—Ä–æ–º–µ —Ç–æ—á–∫–∏)
                value = ''.join(c for c in value if c.isdigit() or c == '.')
            return float(value) if value else 0.0
        except (ValueError, TypeError):
            return 0.0